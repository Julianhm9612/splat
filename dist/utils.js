// bomb model https://poly.google.com/view/0mwBvcViY7P
// apple model https://poly.google.com/view/7AcBNOT0zw5
const fruitsModels=[{model:"banana/Banana_01",material:"banana/Banana_01",name:"banana"},{model:"apple/Apple_01",material:"apple/Apple_01",name:"apple"},{model:"bomb/bomb",material:"bomb/bomb",name:"bomb"}];export const generateRandomXPosition=(a,b)=>Math.round(Math.random()*(b-a))+a;const isAndroid=()=>/Android/i.test(navigator.userAgent),isiOS=()=>/iPhone|iPad|iPod/i.test(navigator.userAgent);export const isMobile=()=>isAndroid()||isiOS();export const draw3DHand=()=>{// const geometry = new THREE.BoxGeometry(10, 10, 10);
const a=new THREE.BoxGeometry(7,7,7),b=new THREE.MeshPhongMaterial({transparent:!0,opacity:0}),c=new THREE.Mesh(a,b);return c.position.z=0,c};export const moveHands=(a,b,c)=>a.map(a=>{const d=new THREE.Vector3;// the x coordinates seem to be flipped so i'm subtracting them from window innerWidth
d.x=2*((window.innerWidth-a.coordinates.x)/window.innerWidth)-1,d.y=2*-(a.coordinates.y/window.innerHeight)+1,d.z=0,d.unproject(b);const e=b.position,f=d.sub(e).normalize(),g=-e.z/f.z,h=e.clone().add(f.multiplyScalar(g));a.mesh.position.copy(h),a.mesh.position.z=0,trailTarget.position.x=d.x,trailTarget.position.y=d.y,trailTarget.position.z=150;// trailTarget.position.z = 200;
let i=a.mesh.geometry;for(var j=a.mesh.position.clone(),k=0;k<i.vertices.length;k++){var l=i.vertices[k].clone(),m=l.applyMatrix4(a.mesh.matrix),n=m.sub(a.mesh.position),o=new THREE.Raycaster(j,n.clone().normalize()),p=o.intersectObjects(c);if(0<p.length&&300>p[0].distance&&!1===p[0].object.hit)// if (collisionResults[0].distance < 800) {
// if (collisionResults[0].distance < 500) {
return p[0].object.hit=!0,console.log("you should come here once"),"bomb"===p[0].object.name&&endGame(),scene.remove(p[0].object),c.splice(p[0].object.index,1),gameOver||generateFruits(1),!0;// if (
//   collisionResults.length > 0 &&
//   collisionResults[0].distance < directionVector.length()
// ) {
//   console.log("collisionnnn");
// }
}return!1});export const losePoint=()=>{hitScore+=1,document.getElementsByClassName("score-number")[1].innerHTML=`${hitScore}/3`,3===hitScore&&endGame()};const endGame=()=>{// remove all objects from scene.
gameOver=!0,hitScore=0,score=0,document.getElementsByClassName("game-over")[0].style.display="flex",cancelAnimationFrame(frameLoop),fruitsObjects.map(a=>{scene.remove(a),fruitsObjects=[]})},resetGame=()=>{// restart button
// generate fruits
},resetCamera=()=>{// camera.position.set(0, 200, 400);
camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),camera.position.set(0,0,cameraZPosition),camera.lookAt(scene.position),renderer.setSize(window.innerWidth,window.innerHeight)};export const initRenderer=()=>{renderer=new THREE.WebGLRenderer({alpha:!0}),renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight);let a=document.getElementsByClassName("game")[0];a.appendChild(renderer.domElement)};export const initLights=()=>{let a=new THREE.AmbientLight(new THREE.Color("rgb(255,255,255)"));a.position.set(10,0,50),scene.add(a);let b=new THREE.PointLight(16777215,2,1e3,1);b.position.set(0,40,0),scene.add(b)};export const render=()=>renderer&&renderer.render(scene,camera);export const updateStartButton=()=>{document.getElementsByTagName("button")[0].innerText="Start",document.getElementsByTagName("button")[0].disabled=!1};export const initTrailOptions=()=>{options={headRed:1,headGreen:0,headBlue:1,headAlpha:.75,tailRed:0,tailGreen:1,tailBlue:1,tailAlpha:.35,trailLength:7,textureTileFactorS:10,textureTileFactorT:.8,dragTexture:!1,depthWrite:!1}};const initTrailTarget=()=>{var a=new THREE.CircleGeometry(5,32),b=new THREE.MeshBasicMaterial({color:16777215});trailTarget=new THREE.Mesh(a,b),trailTarget.position.set(0,0,0),trailTarget.scale.multiplyScalar(1),trailTarget.receiveShadow=!1},updateTrailColors=()=>{trailMaterial.uniforms.headColor.value.set(options.headRed,options.headGreen,options.headBlue,options.headAlpha),trailMaterial.uniforms.tailColor.value.set(options.tailRed,options.tailGreen,options.tailBlue,options.tailAlpha)},updateTrailTextureTileSize=()=>{trailMaterial.uniforms.textureTileFactor.value.set(options.textureTileFactorS,options.textureTileFactorT)},initializeTrail=()=>{trail.initialize(trailMaterial,Math.floor(options.trailLength),options.dragTexture?1:0,0,trailHeadGeometry,trailTarget),updateTrailColors(),updateTrailTextureTileSize(),trailMaterial.depthWrite=options.depthWrite,trail.activate()},initTrailHeadGeometries=()=>{var a=Math.sin,b=Math.cos;circlePoints=[];for(var c,d=2*Math.PI,e=0,f=d/32,g=0;g<=d+f;g+=f)c=new THREE.Vector3,c.set(10*b(g),10*a(g),0),circlePoints[e]=c,e++},setupCamera=async()=>{if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new Error("Browser API navigator.mediaDevices.getUserMedia not available");const a=document.getElementById("video");a.width=window.innerWidth,a.height=window.innerHeight;const b=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:window.innerWidth,height:window.innerHeight}});return a.srcObject=b,new Promise(b=>a.onloadedmetadata=()=>b(a))},loadVideo=async()=>{const a=await setupCamera();return a.play(),a};export const initSounds=()=>{newFruitSound=new Howl({src:["../assets/fruit.m4a"]}),fruitSliced=new Howl({src:["../assets/splash.m4a"]}),bombSlicedSound=new Howl({src:["../assets/bomb-sound.m4a"]})};export const guiState={algorithm:"single-pose",input:{mobileNetArchitecture:"0.75",outputStride:16,imageScaleFactor:.5},singlePoseDetection:{minPoseConfidence:.1,minPartConfidence:.5},output:{showVideo:!1,showPoints:!0},net:null};export const loadPoseNet=async()=>{net=await posenet.load({architecture:"MobileNetV1",outputStride:16,inputResolution:513,multiplier:.75});try{video=await loadVideo()}catch(a){throw a}guiState.net=net};export const generateFruits=a=>{for(var b=0;b<a;b++){const a=fruits[generateRandomXPosition(0,2)];let b=a.clone();// Why are we cloning?
switch(b.name){case"apple":randomXPosition=generateRandomXPosition(-120*camera.aspect,120*camera.aspect),randomYPosition=generateRandomXPosition(-290,-190),b.position.set(randomXPosition,randomYPosition,100),b.thresholdBottomY=randomYPosition,b.thresholdTopY=150,b.speed=6;break;case"banana":randomXPosition=generateRandomXPosition(-200*camera.aspect,200*camera.aspect),randomYPosition=generateRandomXPosition(-370,-270),b.position.set(randomXPosition,randomYPosition,0),b.thresholdBottomY=randomYPosition,b.thresholdTopY=200,b.speed=6;break;case"bomb":randomXPosition=generateRandomXPosition(-110*camera.aspect,110*camera.aspect),randomYPosition=generateRandomXPosition(-290,-190),b.position.set(randomXPosition,randomYPosition,100),b.scale.set(20,20,20),b.speed=6,b.thresholdBottomY=randomYPosition,b.thresholdTopY=150;break;default:}b.soundPlayed=!1,b.direction="up",b.hit=!1,b.index=fruitsObjects.length,fruitsObjects.push(b),scene.add(b),renderer.render(scene,camera)}};export const loadFruitsModels=()=>fruitsModels.map(a=>{var b=new THREE.MTLLoader;return b.setPath("../assets/"),b.load(`${a.material}.mtl`,function(b){b.preload();var c=new THREE.OBJLoader;c.setMaterials(b),c.setPath("../assets/"),c.load(`${a.model}.obj`,function(b){b.traverse(function(b){if(b instanceof THREE.Mesh){var c=new THREE.Mesh(b.geometry,b.material);fruitModel=c,fruitModel.name=a.name,fruits.push(fruitModel)}}),fruits.length===fruitsModels.length&&generateFruits(1)})}),fruits});export const onWindowResize=()=>{camera&&resetCamera(),render()};export const initScene=()=>{scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e3),cameraZPosition=300,camera.position.set(0,0,cameraZPosition),scene.add(camera)};export const initSceneGeometry=a=>{initTrailHeadGeometries(),initTrailTarget(),a&&a()};export const initTrailRenderers=a=>{function b(){trailHeadGeometry=circlePoints,trailMaterial=baseTrailMaterial,initializeTrail()}trail=new THREE.TrailRenderer(scene,!1),baseTrailMaterial=THREE.TrailRenderer.createBaseMaterial();var c=new THREE.TextureLoader;c.load("../assets/sparkle4.jpg",function(c){c.wrapS=THREE.RepeatWrapping,c.wrapT=THREE.RepeatWrapping,texturedTrailMaterial=THREE.TrailRenderer.createTexturedMaterial(),texturedTrailMaterial.uniforms.texture.value=c,b(),a&&a()})};